{"version":3,"sources":["images/not_found.svg","images/close_button.svg","images/logo.svg","images/delete_button.svg","images/pen.svg","images/edit__button.svg","images/add__button.svg","images/гора_эльбрус.jpg","utils/Api.js","utils/Utils.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","Error","status","url","fetch","authorization","then","_getResponseData","_get","name","about","method","body","JSON","stringify","link","cardId","_updateCardLike","avatar","Header","className","href","src","logoPath","alt","CurrentUserContext","React","createContext","Card","props","onImageNotFound","evt","target","onerror","notFoundImagePath","onCardClick","card","handleLikeClick","onCardLike","handleDeleteClick","onCardDelete","isOwnCard","owner","_id","context","isOwnLike","likes","find","like","key","onError","onClick","aria-label","type","length","deleteButtonPath","Component","contextType","Main","penPath","onEditAvatar","onEditProfile","editButtonPath","onAddPlace","addButtonPath","cards","map","currentUserId","Footer","PopupWithForm","isOpen","action","noValidate","onSubmit","title","children","isSubmitActive","buttonName","onClose","closeButtonPath","EditProfilePopup","currentUser","useContext","useState","setName","description","setDescription","useEffect","event","preventDefault","onUpdateUser","id","required","minLength","maxLength","pattern","placeholder","onChange","value","EditAvatarPopup","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","onUpdatePlace","ImagePopup","App","handleCardLike","state","dislikeCard","likeCard","newCard","newCards","c","setState","handleCardDelete","deleteCard","filter","catch","err","console","log","handleAddPlaceSubmit","addNewCard","closeAllPopups","handleUpdateUser","updateUserInfo","user","createDefaultUser","handleUpdateAvatar","updateUserAvatar","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","selectedCard","FakeAvatarPath","getInitialCards","getUserInfo","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.aa23b817.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not_found.908c20cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/close_button.5df32a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete_button.d8078343.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.d476a8b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit__button.b05083e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/add__button.b2fce4ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/гора_эльбрус.d6ed7639.jpg\";","import {apiConfig} from './Utils.js';\n\nexport class API {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _getResponseData(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n\n  _get(url) {\n    return fetch(`${this._baseUrl}/${url}`, {\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n      .then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return this._get('users/me');\n  }\n\n\n  getInitialCards() {\n    return this._get('cards');\n  }\n\n  updateUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n    .then(this._getResponseData);\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n    .then(this._getResponseData);\n  }\n\n  _updateCardLike(cardId, method) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: method,\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n    .then(this._getResponseData);\n  }\n\n  likeCard(cardId) {\n    return this._updateCardLike(cardId, 'PUT');\n  }\n\n  dislikeCard(cardId) {\n    return this._updateCardLike(cardId, 'DELETE');\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n      .then(this._getResponseData);\n  }\n\n  updateUserAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n    .then(this._getResponseData);\n  }\n}\n\nconst api = new API (apiConfig);\n\nexport default api ;","export const validationOptions = {\n    formSelector: '.form',\n    inputSelector: '.form__input',\n    submitButtonSelector: '.form__submit',\n    inactiveButtonClass: 'form__submit_inactive',\n};\n\nexport const apiConfig = {\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n    headers: {\n      authorization: 'f4b731d6-2118-4fcc-9305-6dde1beafd26',\n      'Content-Type': 'application/json'\n    }\n};","import React from 'react';\nimport logoPath from '../images/logo.svg';\n\n\nfunction Header () {\n    return (\n        <header className=\"header\">\n            <a href=\"#\"><img src={logoPath} className=\"header__logo\" alt=\"логотип Mesto\"/></a>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport deleteButtonPath from '../images/delete_button.svg';\nimport notFoundImagePath from '../images/not_found.svg';\nimport { CurrentUserContext} from '../contexts/CurrentUserContext';\n\nclass Card extends React.Component {\n\n    static contextType = CurrentUserContext;\n\n    constructor(props) {\n        super(props);\n    }\n\n    onImageNotFound = (evt) => {\n        evt.target.onerror = null;\n        evt.target.src = notFoundImagePath;\n    }\n\n    onCardClick = () => {\n        this.props.onCardClick(this.props.card);\n    }\n\n    handleLikeClick = () => {\n        this.props.onCardLike(this.props.card);\n    }\n\n    handleDeleteClick = () => {\n        this.props.onCardDelete(this.props.card);\n    }\n\n    render () {\n        const isOwnCard = this.props.card.owner._id === this.context._id;\n        const isOwnLike = this.props.card.likes.find((like) => like._id === this.context._id);\n        return (\n            <div className=\"elements__item\" key={this.props.card._id}>\n                        <img onError={this.onImageNotFound} onClick={this.onCardClick} className=\"elements__item-picture\" alt=\"Картинка\" src={this.props.card.link}></img>\n                        <div className=\"elements__item-info\">\n                            <h2 className=\"elements__item-title\">{this.props.card.name}</h2>\n                            <div className=\"elements__likes-container\">\n                                <button aria-label=\"like\" type=\"button\" onClick={this.handleLikeClick} className={`elements__heart-button  ${isOwnLike ?  \"elements__heart-button_active\" : '' }  `}>\n                                </button>\n                                <p className=\"elements__likes\">{this.props.card.likes ? this.props.card.likes.length : 0}</p>\n                            </div>\n                        </div>\n                        <button aria-label=\"delete\" type=\"button\" onClick={this.handleDeleteClick} className={`elements__delete-button ${!isOwnCard ? 'elements__delete-button_inactive' : ''}`} >\n                            <img src={deleteButtonPath} alt=\"Знак корзины\"></img>\n                        </button>\n            </div>\n        );\n    }\n}    \n\n\nexport default Card;\n","import React from 'react';\n\nimport api from '../utils/Api';\nimport Card from './Card';\n\nimport penPath from '../images/pen.svg';\nimport notFoundImagePath from '../images/not_found.svg';\nimport editButtonPath from '../images/edit__button.svg';\nimport addButtonPath from '../images/add__button.svg';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\n\nclass Main extends React.Component {\n  \n    static contextType = CurrentUserContext;\n\n    constructor(props) {\n        super(props);\n    }\n\n    onImageNotFound = (evt) => {\n        evt.target.onerror = null;\n        evt.target.src = notFoundImagePath;\n    }\n\n\n    render () {\n        \n        return (\n            <main className=\"content\">\n                <section className=\"profile\">\n                    <div className=\"profile__info\">\n                        <div className=\"profile__avatar\">\n                            <img src={penPath} className=\"profile_active\" alt=\" Изменение аватарки\"></img>\n                            <img src={this.context && this.context.avatar} \n                                onError={this.onImageNotFound} \n                                onClick={this.props.onEditAvatar} \n                                className=\"profile__image\" alt=\"Аватар\"></img>\n                        </div>\n                        <div>\n                            <div className=\"profile__name-container\">\n                                <h1 className=\"profile__name\">{this.context && this.context.name}</h1>\n                                <button aria-label=\"edit\" type=\"button\" \n                                onClick={this.props.onEditProfile} \n                                className=\"profile__edit-button\">\n                                    <img src={editButtonPath} alt=\"Кнопка изменения\"></img>\n                                </button>\n                            </div>\n                                <p className=\"profile__profession\">{this.context && this.context.about}</p>\n                        </div>\n                    </div>\n                    <button aria-label=\"add\" type=\"button\"\n                    onClick={this.props.onAddPlace}\n                    className=\"profile__add-button\">\n                        <img src={addButtonPath} className=\"profile__add-button-image\" alt=\"Кнопка добавления\"></img>\n                    </button>\n                </section>\n\n                <section className=\"elements\">\n                \n                    {this.props.cards.map((card) => (\n                        <Card  card={card} currentUserId={this.context && this.context._id} key={card._id} onCardClick={this.props.onCardClick} onCardLike={this.props.onCardLike} onCardDelete={this.props.onCardDelete}/>\n                        )\n                    )}\n\n                </section>\n\n\n            </main>\n        );\n    }\n\n}\n\n\n\n\n\n\nexport default Main;\n","import React from 'react';\n\n\nfunction Footer () {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__info\">&copy; 2020. Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport closeButtonPath from '../images/close_button.svg';\n\nclass PopupWithForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n  \n    render () {\n\n        return (\n\n            <section className={`popup popup_${this.props.name} ${this.props.isOpen ? \"popup_opened\" : \"\"}`}>\n                    <form name={`popup-${this.props.name}-form`} method=\"get\" action=\"#\" className=\"popup__container form\" noValidate onSubmit={this.props.onSubmit}>\n                        <h2 className=\"popup__title\">{this.props.title}</h2>\n                        {this.props.children}\n                        <button type=\"submit\" className={`popup__button form__submit ${this.props.isSubmitActive ? \"\" : \"form__submit_inactive\"}`}>{this.props.buttonName}</button>\n                        <button aria-label=\"close\" type=\"button\" className=\"popup__close-button\" onClick={this.props.onClose} >\n                            <img src={closeButtonPath} alt=\"Кнопка закрыть\" className=\"popup__close-button-image\"></img>\n                        </button>\n                    </form>\n            </section>\n\n        );\n    }\n}    \n\n\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n\n\n    function handleNameChange(event) {\n        setName(event.target.value);\n    }\n\n    function handleDescriptionChange(event) {\n        setDescription(event.target.value);\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onUpdateUser({\n            name,\n            about: description,\n          });\n    }\n\n    function onCloseProfilePopup() {\n        props.onClose();\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }\n\n    return (\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" buttonName=\"Сохранить\" isSubmitActive={true} isOpen={props.isOpen} onClose={onCloseProfilePopup} onSubmit={handleSubmit}>\n            <input id=\"name-input\" type=\"text\" required minLength=\"2\" maxLength=\"40\"\n                pattern=\"[A-Za-zА-Яа-яЁё\\s\\-]+$\" placeholder=\"Имя\"\n                className=\"popup__text popup__text_type_name form__input\"\n                onChange={handleNameChange}\n                value={name}></input>\n            <span id=\"name-input-error\" className=\"form__input-error\"></span>\n            <input id=\"profession-input\" type=\"text\" required minLength=\"2\" maxLength=\"200\"\n                pattern=\"[A-Za-zА-Яа-яЁё\\s\\-,]+$\" placeholder=\"О себе\"\n                className=\"popup__text popup__text_type_profession form__input\"\n                onChange={handleDescriptionChange}\n                value={description}></input>\n            <span id=\"profession-input-error\" className=\"form__input-error\"></span>\n        </PopupWithForm>\n    )\n\n}\n\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\n\n\nfunction EditAvatarPopup(props) {\n\n    const avatar = React.useRef();\n    \n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onUpdateAvatar({\n           avatar: avatar.current.value,\n        });\n    }\n    \n   \n\n    return (\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" buttonName=\"Сохранить\" isSubmitActive={true} isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n                    <input id=\"url-input\" type=\"url\" required placeholder=\"Ссылка на аватар\"\n                            className=\"popup__text popup__text_type_link form__input\" \n                            ref={avatar}></input>\n                    <span id=\"url-input-error\" className=\"form__input-error\"></span>\n        </PopupWithForm>\n    )\n\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\n\nfunction AddPlacePopup(props) {\n    \n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n\n    function handleNameChange(event) {\n        setName(event.target.value);\n    }\n\n    function handlelinkChange(event) {\n        setLink(event.target.value);\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onUpdatePlace(\n            name,\n            link,\n          );\n    }\n\n    function onCloseProfilePopup() {\n        props.onClose();\n        setName('');\n        setLink('');\n    }\n   \n\n    return(\n        <PopupWithForm name=\"card\" title=\"Новое место\" buttonName=\"Сохранить\" isSubmitActive={true} isOpen={props.isOpen} onClose={onCloseProfilePopup} onSubmit={handleSubmit}>\n            <input id=\"picture-input\" type=\"text\" required minLength=\"1\" maxLength=\"30\" placeholder=\"Название\"\n                className=\"popup__text popup__text_type_picture form__input\" onChange={handleNameChange}></input>\n            <span id=\"picture-input-error\" className=\"form__input-error\"></span>\n            <input id=\"url-input\" type=\"url\" required placeholder=\"Ссылка на картинку\"\n                className=\"popup__text popup__text_type_link form__input\" onChange={handlelinkChange}></input>\n            <span id=\"url-input-error\" className=\"form__input-error\"></span>\n        </PopupWithForm>\n    )\n\n\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport closeButtonPath from '../images/close_button.svg';\nimport notFoundImagePath from '../images/not_found.svg';\n\nclass ImagePopup extends React.Component {\n    \n    constructor(props) {\n        super(props);\n    }\n    \n    onImageNotFound = (evt) => {\n        evt.target.onerror = null;\n        evt.target.src = notFoundImagePath;\n    }\n    \n    render () {\n        return (\n            <section className={`popup popup_picture ${this.props.card ? \"popup_opened\" : \"\"}`}>\n                    <div className=\"popup__container popup__container_picture\">\n                        <img src={this.props.card !== null ? this.props.card.link : \"\" } onError={this.onImageNotFound}\n                            alt=\"картинка\" className=\"popup__image\"></img>\n                        <h2 className=\"popup__title popup__title_picture\">{this.props.card !== null ? this.props.card.name : \"\" }</h2>\n                        <button aria-label=\"close\" type=\"button\" className=\"popup__close-button\" onClick={this.props.onClose}>\n                            <img src={closeButtonPath} alt=\"Кнопка закрыть\" className=\"popup__close-button-image\"></img>\n                        </button>\n                    </div>\n                </section>\n        );\n    }\n}    \n\n\n\nexport default ImagePopup;","import React from 'react';\n\nimport api from '../utils/Api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext} from '../contexts/CurrentUserContext';\n\nimport FakeAvatarPath from '../images/гора_эльбрус.jpg';\n\nimport '../index.css';\n\n\nclass App extends React.Component {\n\n    static contextType = CurrentUserContext;\n\n    constructor(){\n        super();\n        this.state = {\n            isEditProfilePopupOpen: false,\n            isAddPlacePopupOpen: false,\n            isEditAvatarPopupOpen: false,\n            selectedCard: null,\n            currentUser: this.createDefaultUser(),\n            cards:[]\n        }\n    }\n\n\n    componentDidMount() {\n        api.getInitialCards()\n        .then(cards => {\n            this.setState({ cards: cards });\n        }).catch(err => {\n            console.log(err);\n        });\n\n        api.getUserInfo()\n        .then (user => {\n            this.setState({currentUser: user});\n        }).catch(err => {\n            this.setState({currentUser: this.createDefaultUser()});\n            console.log(err);\n        });\n    } \n\n    render () {\n        return (        \n            <div className=\"page\">\n                <Header />\n\n                <CurrentUserContext.Provider value={this.state.currentUser}>\n\n                <Main\n                    onEditAvatar={this.handleEditAvatarClick}\n                    onEditProfile={this.handleEditProfileClick}\n                    onAddPlace={this.handleAddPlaceClick}\n                    onCardClick={this.handleCardClick}\n                    cards={this.state.cards}\n                    onCardLike={this.handleCardLike}\n                    onCardDelete={this.handleCardDelete}\n                />\n\n                <ImagePopup card={this.state.selectedCard} onClose={this.closeAllPopups}>\n                </ImagePopup>\n\n                <EditProfilePopup  onUpdateUser={this.handleUpdateUser} isOpen={this.state.isEditProfilePopupOpen} onClose={this.closeAllPopups}>\n                </EditProfilePopup>\n\n                <AddPlacePopup onUpdatePlace={this.handleAddPlaceSubmit} isOpen={this.state.isAddPlacePopupOpen} onClose={this.closeAllPopups}>\n                </AddPlacePopup>\n\n                <PopupWithForm name=\"check\" title=\"Вы уверены?\" buttonName=\"Да\" isSubmitActive={true} isOpen={false} onClose={this.closeAllPopups}>\n                </PopupWithForm>\n\n                <EditAvatarPopup onUpdateAvatar={this.handleUpdateAvatar} isOpen={this.state.isEditAvatarPopupOpen} onClose={this.closeAllPopups}>\n                </EditAvatarPopup>\n\n                </CurrentUserContext.Provider>\n\n                <Footer />\n\n\n\n            </div>  \n        );\n    }\n\n\n    handleCardLike = (card) => {\n        const myLike = card.likes.find((like) => like._id === this.state.currentUser._id);\n        const promise = myLike ? api.dislikeCard(card._id) : api.likeCard(card._id);\n\n        promise.then((newCard) => {\n            const newCards = this.state.cards.map((c) => c._id === card._id ? newCard : c);\n            this.setState({cards: newCards});\n        });\n    }\n\n\n    handleCardDelete = (card) => {     \n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = this.state.cards.filter((c) => c._id !== card._id);\n                this.setState({cards: newCards});\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    handleAddPlaceSubmit = (name, link) => {\n        api.addNewCard(name, link)\n        .then ((newCard) =>{\n            console.log(newCard);\n            this.setState({cards:[...this.state.cards, newCard]}); \n        }).catch(err => {\n            console.log(err);\n        });\n\n        this.closeAllPopups();\n    }\n\n    \n    handleUpdateUser = ({name, about}) => {\n        api.updateUserInfo(name, about)\n        .then (user => {\n            this.setState({currentUser: user});\n        }).catch(err => {\n            this.setState({currentUser: this.createDefaultUser()});\n            console.log(err);\n        });\n        this.closeAllPopups();\n    }\n\n    handleUpdateAvatar = ({avatar}) => {\n        api.updateUserAvatar(avatar)\n        .then (user => {\n            this.setState({currentUser: user});\n        }).catch(err => {\n            this.setState({currentUser: this.createDefaultUser()});\n            console.log(err);\n        });\n        this.closeAllPopups();\n    } \n\n    handleEditAvatarClick = () => {\n        this.setState({ isEditAvatarPopupOpen: true });\n    }\n    \n    handleEditProfileClick = () => {\n        this.setState({ isEditProfilePopupOpen: true });\n    }\n    \n    handleAddPlaceClick = () => {\n        this.setState({ isAddPlacePopupOpen: true });\n    }\n\n    handleAddPlaceClick = () => {\n        this.setState({ isAddPlacePopupOpen: true });\n    }\n\n    handleCardClick =(card) => {\n        this.setState({selectedCard: card});\n    }\n\n    closeAllPopups = () => {\n        this.setState({ isEditProfilePopupOpen: false,\n            isAddPlacePopupOpen: false, \n            isEditAvatarPopupOpen: false,\n            selectedCard: null\n        });\n    }\n\n    createDefaultUser = () => {\n        return {\n            _id: -1,\n            name: 'No name',\n            about: 'No description',\n            avatar: FakeAvatarPath\n        };\n    }\n\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}